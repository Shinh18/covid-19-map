{"version":3,"sources":["webpack:///./src/lib/leaflet.js","webpack:///./src/utils/dispatch.js","webpack:///./src/utils/config.js","webpack:///./src/utils/queries.js","webpack:///./src/utils/datetime.js","webpack:///./src/map-layers.js","webpack:///./src/utils/constants.js","webpack:///./src/components/LeafletMap.js","webpack:///./src/components/InfoWindow.js","webpack:///./src/components/LoadingIndicator.js","webpack:///./src/utils/data.js","webpack:///./src/index.js","webpack:///./src/utils/parse-hash.js","webpack:///./src/components/TitleDetails.js"],"names":["L","Object","assign","require","rentStrikeIcon","Icon","iconUrl","iconSize","iconAnchor","className","dispatch","d3Dispatch","cartoSheetSyncTable","citiesCartoQuery","countiesCartoQuery","statesCartoQuery","countriesCartoQuery","housingActionsCartoQuery","formatDate","date","locale","timeZone","Date","toLocaleString","year","month","day","mapLayersConfig","cities","name","type","query","queries","zIndex","props","layer","feature","properties","municipality","state","country","end_date_legist","end_date_rent_relief","end_date_court","rest","jurisdictionName","jurisdictionType","popupName","endDateLegist","endDateRentRelief","endDateCourt","policyStrength","policyStrengthLanguage","range","style","color","strokeColorScale","colorNoData","fillColor","fillColorScale","fillOpacity","radius","pointRadius","weight","strokeWeight","pointToLayer","latlng","circleMarker","onEachFeature","has_expired_protections","options","policyStrengthLayerClassNames","counties","county","states","admin","nations","name_en","end_date_earliest","endDateEarliest","rentStrikes","marker","icon","window","undefined","defaultMapConfig","lat","lng","z","TOTAL_NUMBER_OF_MAP_LAYERS","keys","length","isMobile","document","querySelector","offsetWidth","LeafletMap","config","Map","innerHTML","map","invalidateSize","closePopup","error","console","toggleLoadingIndicator","layerGroup","markerLayer","markerClusterGroup","key","layerConfig","data","self","geoJson","maxClusterRadius","on","call","addLayer","bindPopup","template","Mustache","render","rentStrikePopupTemplate","Error","popupTemplate","dataLayers","set","addTo","fixZOrder","handleAllLayersAdded","size","forEach","layersControl","addOverlay","Array","from","values","sort","a","b","hasLayer","bringToFront","isLoading","this","init","bindListeners","zoomControl","attributionControl","maxBounds","setView","control","attribution","prefix","addAttribution","zoom","position","layers","collapsed","basemapLayer","tileLayer","minZoom","maxZoom","resizeWindow","e","getElementById","classList","add","popup","_latlng","getZoom","animate","remove","setTimeout","addEventListener","clearTimeout","handleWindowResize","handleInfoWindowClose","handleAddLayer","handleLayerError","InfoWindow","infowindowContainer","infowindowTemplate","rentStrikeInfowindowTemplate","closeInfoWindow","LoadingIndicator","loadingContainer","hidden","show","hide","cartoSqlApiBaseUri","handleFetchSuccess","handleFetchFailure","getCartoData","format","fetch","encodeURIComponent","res","ok","json","entries","mapConfig","input","location","hash","slice","split","inputVals","i","value","isNaN","parseInt","parseFloat","rentstrike","parseUriHash","titleDetails","open","toggleTitleDetails","openTitleDetails","closeTitleDetails","getData"],"mappings":"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","file":"index.68f579c776ece2f3b9a4.js","sourcesContent":["// NOTE: use this module for referencing Leaflet,\n// so that any Leaflet plugins are also available\nconst L = Object.assign(\n  {},\n  require(\"leaflet\"),\n  require(\"leaflet.markercluster\")\n);\n\nexport const rentStrikeIcon = new L.Icon({\n  iconUrl: \"./assets/mapIcons/rent-strike.svg\",\n  iconSize: [40, 40],\n  iconAnchor: [20, 20],\n  className: \"icon-rent-strike\",\n});\n\nexport default L;\n","import { dispatch as d3Dispatch } from \"d3-dispatch\";\n// d3-dispatch is a lightweight pub/sub module\n// for more see: https://github.com/d3/d3-dispatch\n\n// using dispatch.on() or dispatch.call() with one of the\n// following strings will respond or invoke an event\nconst events = [\n  \"fetch-map-data-resolve\",\n  \"fetch-map-data-reject\",\n  \"viewport-size\",\n  \"render-infowindow\",\n  \"close-infowindow\",\n  \"title-details-toggle\",\n  \"title-details-close\",\n  \"title-details-open\",\n  \"show-loading-indicator\",\n  \"hide-loading-indicator\",\n];\n\n/**\n * dispatch usage:\n * dispatch.call(\"<event-name>\", <optional this context>, <optional value>);\n * dispatch.on(\"<event-name>\", <callback function>)\n * dispatch.on(\"<event-name.sub-name>\", <second callback function>)\n * dispatch.on(\"<event-name.sub-other-name>\", <third callback function>)\n * etc...\n */\nexport const dispatch = d3Dispatch(...events);\n","// name of AEMP's CARTO account\nexport const aempCartoAccount = \"ampitup\";\n\n// table in CARTO that syncs with the tenants protections legislation Google sheet\nexport const cartoSheetSyncTable = \"public.emergency_tenant_protections_scored\";\n\n// table in CARTO that syncs with the housing actions Google sheet\nexport const cartoHousingActionsTable = \"public.emergency_housing_actions\";\n\n// misc admin boundary geometry tables\nexport const cartoCountiesTable = \"public.us_county_boundaries\";\nexport const cartoStatesTable = \"public.states_and_provinces_global\";\nexport const cartoNationsTable = \"public.countries\";\n","import {\n  cartoHousingActionsTable,\n  cartoSheetSyncTable,\n  cartoCountiesTable,\n  cartoStatesTable,\n  cartoNationsTable,\n} from \"./config\";\n\n/**\n * SQL queries that are passed to the CARTO SQL API\n * for more info on the SQL API see: https://carto.com/developers/sql-api/\n */\n\nexport const citiesCartoQuery = `\nSELECT\n  municipality, state, country, range, has_expired_protections,\n  policy_type, policy_summary, link, the_geom,\n  end_date_earliest, end_date_legist, end_date_rent_relief, end_date_court\nFROM ${cartoSheetSyncTable}\nWHERE the_geom is not null and admin_scale = 'City'\nORDER BY range`;\n\nexport const countiesCartoQuery = `\nSELECT\n  c.the_geom, c.county, c.state, m.range,\n  m.policy_type, m.policy_summary, m.link,\n  m.range, has_expired_protections,\n  end_date_earliest, end_date_legist, end_date_rent_relief, end_date_court\nFROM ${cartoCountiesTable} c\nJOIN ${cartoSheetSyncTable} m\nON ST_Intersects(c.the_geom, m.the_geom)\nWHERE m.the_geom IS NOT NULL\n  AND m.admin_scale = 'County'\n  OR m.admin_scale = 'City and County'\nORDER BY m.range`;\n\nexport const statesCartoQuery = `\nSELECT\n  s.the_geom, s.name, s.admin, s.sr_adm0_a3,\n  m.range, m.iso, m .policy_type, m.policy_summary,\n  m.link, has_expired_protections,\n  end_date_earliest, end_date_legist, end_date_rent_relief, end_date_court\nFROM ${cartoStatesTable} s\nINNER JOIN ${cartoSheetSyncTable} m\n  ON s.name = m.state\n  AND s.sr_adm0_a3 = m.iso\n  AND m.admin_scale = 'State'\nORDER BY m.range`;\n\nexport const countriesCartoQuery = `\nSELECT\n  c.the_geom, c.adm0_a3, c.name_en, m.range,\n  m.policy_type, m.policy_summary, m.link, has_expired_protections,\n  end_date_earliest\nFROM ${cartoNationsTable} c\nINNER JOIN ${cartoSheetSyncTable} m\n  ON c.adm0_a3 = m.iso\n  AND m.admin_scale = 'Country'\nORDER BY m.range`;\n\nexport const housingActionsCartoQuery = `\n  SELECT\n    CASE\n      WHEN strike_status IN ('Yes / Sí / 是 / Oui', 'Yes') THEN 'Yes'\n      WHEN strike_status IN ('Unsure / No estoy segurx / 不确定 / Pas sûr.e.s.', 'No') THEN 'No'\n      ELSE 'Unsure'\n    END AS status,\n    TO_CHAR(start :: DATE, 'Month d, yyyy') as start,\n    the_geom, location, why, resources\n  FROM ${cartoHousingActionsTable}\n  WHERE the_geom IS NOT NULL;\n`;\n","export const formatDate = (date, locale, timeZone) =>\n  date\n    ? new Date(date).toLocaleString(locale || \"en-US\", {\n        timeZone: timeZone || \"UTC\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      })\n    : null;\n","import L, { rentStrikeIcon } from \"lib/leaflet\";\nimport {\n  colorNoData,\n  fillColorScale,\n  strokeColorScale,\n  strokeWeight,\n  pointRadius,\n  fillOpacity,\n  policyStrengthLanguage,\n  policyStrengthLayerClassNames,\n} from \"utils/constants\";\nimport * as queries from \"./utils/queries\";\nimport { formatDate } from \"./utils/datetime\";\n\nexport const mapLayersConfig = {\n  cities: {\n    name: \"City Protections\",\n    type: \"point\",\n    query: queries.citiesCartoQuery,\n    zIndex: 1,\n    props(layer) {\n      const {\n        municipality,\n        state,\n        country,\n        end_date_legist,\n        end_date_rent_relief,\n        end_date_court,\n        ...rest\n      } = layer.feature.properties;\n      return {\n        // Build city name with state and country if supplied\n        jurisdictionName: `${municipality}${state ? `, ${state}` : \"\"}${\n          country ? `, ${country}` : \"\"\n        }`,\n        jurisdictionType: \"City\",\n        popupName: municipality,\n        endDateLegist: formatDate(end_date_legist),\n        endDateRentRelief: formatDate(end_date_rent_relief),\n        endDateCourt: formatDate(end_date_court),\n        policyStrength: policyStrengthLanguage[layer.feature.properties.range],\n        ...rest,\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: 0.85,\n        radius: pointRadius,\n        weight: strokeWeight,\n      };\n    },\n    pointToLayer(feature, latlng) {\n      return L.circleMarker(latlng, mapLayersConfig.cities.style(feature));\n    },\n    onEachFeature(feature, layer) {\n      // class name is used for applying pattern fills to polygons\n      if (feature.properties.has_expired_protections) {\n        layer.options.className =\n          policyStrengthLayerClassNames[feature.properties.range] +\n          \"--city-level\";\n      }\n    },\n  },\n\n  counties: {\n    name: \"County Protections\",\n    type: \"polygon\",\n    query: queries.countiesCartoQuery,\n    zIndex: 2,\n    props(layer) {\n      const {\n        state,\n        county,\n        end_date_legist,\n        end_date_rent_relief,\n        end_date_court,\n        ...rest\n      } = layer.feature.properties;\n      return {\n        // Show county with state if state field is set\n        jurisdictionName: `${county}${state ? `, ${state}` : \"\"}`,\n        jurisdictionType: \"County\",\n        popupName: `${county}${state ? `, ${state}` : \"\"}`,\n        endDateLegist: formatDate(end_date_legist),\n        endDateRentRelief: formatDate(end_date_rent_relief),\n        endDateCourt: formatDate(end_date_court),\n        policyStrength: policyStrengthLanguage[layer.feature.properties.range],\n        ...rest,\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        weight: strokeWeight,\n      };\n    },\n    onEachFeature(feature, layer) {\n      // class name is used for applying pattern fills to polygons\n      if (feature.properties.has_expired_protections) {\n        layer.options.className =\n          policyStrengthLayerClassNames[feature.properties.range];\n      }\n    },\n  },\n\n  states: {\n    name: \"State/Province Protections\",\n    type: \"polygon\",\n    query: queries.statesCartoQuery,\n    zIndex: 3,\n    props(layer) {\n      const {\n        name,\n        admin,\n        end_date_legist,\n        end_date_rent_relief,\n        end_date_court,\n        ...rest\n      } = layer.feature.properties;\n      return {\n        jurisdictionName: `${name}${admin ? `, ${admin}` : \"\"}`,\n        jurisdictionType: \"State/Province\",\n        popupName: name,\n        endDateLegist: formatDate(end_date_legist),\n        endDateRentRelief: formatDate(end_date_rent_relief),\n        endDateCourt: formatDate(end_date_court),\n        policyStrength: policyStrengthLanguage[layer.feature.properties.range],\n        ...rest,\n      };\n    },\n    style(feature) {\n      return {\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        weight: strokeWeight,\n      };\n    },\n    onEachFeature(feature, layer) {\n      // class name is used for applying pattern fills to polygons\n      if (feature.properties.has_expired_protections) {\n        layer.options.className =\n          policyStrengthLayerClassNames[feature.properties.range];\n      }\n    },\n  },\n\n  nations: {\n    name: \"National Protections\",\n    type: \"polygon\",\n    query: queries.countriesCartoQuery,\n    zIndex: 4,\n    props(layer) {\n      const { name_en, end_date_earliest, ...rest } = layer.feature.properties;\n      return {\n        endDateEarliest: formatDate(end_date_earliest),\n        jurisdictionName: name_en,\n        jurisdictionType: \"Country\",\n        popupName: name_en,\n        policyStrength: policyStrengthLanguage[layer.feature.properties.range],\n        ...rest,\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        weight: strokeWeight,\n      };\n    },\n    onEachFeature(feature, layer) {\n      // class name is used for applying pattern fills to polygons\n      if (feature.properties.has_expired_protections) {\n        layer.options.className =\n          policyStrengthLayerClassNames[feature.properties.range];\n      }\n    },\n  },\n\n  rentStrikes: {\n    name: \"Housing Justice Actions\",\n    type: \"marker-cluster\",\n    query: queries.housingActionsCartoQuery,\n    zIndex: 0, // markers have their very own layer pane in Leaflet so don't need a z-index value\n    props(layer) {\n      return layer.feature.properties;\n    },\n    pointToLayer(feature, latlng) {\n      return L.marker(latlng, {\n        icon: rentStrikeIcon,\n      });\n    },\n  },\n};\n\nwindow.mapLayersConfig = mapLayersConfig;\n","import { mapLayersConfig } from \"../map-layers\";\n\n// color values come from this ColorBrewer url:\n// https://colorbrewer2.org/#type=sequential&scheme=YlGn&n=7\nexport const colorNoData = \"#939393\";\nexport const fillColorScale = [undefined, \"#d9f0a3\", \"#78c679\", \"#238443\"];\nexport const strokeColorScale = [undefined, \"#addd8e\", \"#41ab5d\", \"#005a32\"];\n\n// global map layer styling variables\nexport const strokeWeight = 1.5;\nexport const pointRadius = 10;\nexport const fillOpacity = 0.7;\n\n// corresponds to fill & stroke color scales above\nexport const policyStrengthLanguage = [\n  \"\",\n  \"Few protections in place\",\n  \"Some protections in place\",\n  \"Many protections in place\",\n];\n\nexport const policyStrengthLayerClassNames = [\n  undefined,\n  \"few-protections\",\n  \"some-protections\",\n  \"many-protections\",\n];\n\n// note: this matches the breakpoint in styles.css\nexport const MOBILE_BREAKPOINT = 640;\nexport const DESKTOP_BREAKPOINT = 1200;\n\nexport const defaultMapConfig = {\n  lat: 40.67,\n  lng: -97.23,\n  z: 4,\n  nations: false,\n  states: true,\n  cities: true,\n  counties: true,\n  rentStrikes: true,\n};\n\nexport const TOTAL_NUMBER_OF_MAP_LAYERS = Object.keys(mapLayersConfig).length;\n\nexport const isMobile = () =>\n  document.querySelector(\"body\").offsetWidth < MOBILE_BREAKPOINT;\n","import Mustache from \"mustache\";\nimport L from \"lib/leaflet\";\n\nimport { dispatch } from \"utils/dispatch\";\nimport {\n  defaultMapConfig,\n  isMobile,\n  TOTAL_NUMBER_OF_MAP_LAYERS,\n} from \"utils/constants\";\n\nexport class LeafletMap {\n  // dataLayers: look up table to store layer groups in the form of\n  // { layerGroup: <Leaflet layer group>, zIndex: <integer> }\n  dataLayers = new Map();\n\n  // Mustache templates for popup HTML\n  popupTemplate = document.querySelector(\".popup-template\").innerHTML;\n  rentStrikePopupTemplate = document.querySelector(\".rentstrike-popup-template\")\n    .innerHTML;\n\n  constructor(config) {\n    this.config = config || defaultMapConfig;\n    this.init();\n    this.bindListeners();\n  }\n\n  init() {\n    const { lat, lng, z } = this.config;\n\n    this.map = L.map(\"map\", {\n      zoomControl: false,\n      attributionControl: false,\n      maxBounds: [\n        [-85.05, -190], // lower left\n        [85.05, 200], // upper right\n      ],\n    });\n    this.map.setView([lat, lng], z);\n\n    this.attributionControl = L.control\n      .attribution({ prefix: \"Data sources by: \" })\n      .addAttribution(\n        \"<a href='https://www.antievictionmap.com/' target='_blank'>Anti-Eviction Mapping Project</a>\"\n      )\n      .addAttribution(\n        \"<a href='https://www.openstreetmap.org' target='_blank'>Open Street Map Contributors</a>\"\n      )\n      .addTo(this.map);\n\n    this.zoomControl = L.control\n      .zoom({ position: \"bottomright\" })\n      .addTo(this.map);\n\n    this.layersControl = L.control\n      .layers(null, null, { position: \"topright\", collapsed: false })\n      .addTo(this.map);\n\n    this.basemapLayer = L.tileLayer(\n      \"https://a.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}@2x.png\",\n      {\n        minZoom: 1,\n        maxZoom: 18,\n      }\n    ).addTo(this.map);\n  }\n\n  bindListeners() {\n    const self = this;\n    this.map.on(\"popupopen\", function (e) {\n      document.getElementById(\"root\").classList.add(\"aemp-popupopen\");\n\n      if (isMobile()) {\n        dispatch.call(\"title-details-close\");\n        self.map.invalidateSize();\n      }\n\n      self.map.setView(e.popup._latlng, self.map.getZoom(), { animate: true });\n    });\n\n    this.map.on(\"popupclose\", function () {\n      document.getElementById(\"root\").classList.remove(\"aemp-popupopen\");\n      dispatch.call(\"close-infowindow\");\n      if (isMobile())\n        setTimeout(function () {\n          self.map.invalidateSize();\n        }, 100);\n    });\n\n    this.map.on(\"click\", function () {\n      if (isMobile()) {\n        dispatch.call(\"title-details-close\");\n      }\n    });\n\n    // Apply correct relative order of layers when adding from control.\n    this.map.on(\"overlayadd\", () => {\n      this.fixZOrder();\n    });\n\n    let resizeWindow;\n    window.addEventListener(\"resize\", function () {\n      clearTimeout(resizeWindow);\n      resizeWindow = setTimeout(self.handleWindowResize, 250);\n    });\n\n    dispatch.on(\"close-infowindow.map\", this.handleInfoWindowClose);\n    dispatch.on(\"fetch-map-data-resolve.map\", this.handleAddLayer);\n    dispatch.on(\"fetch-map-data-reject.map\", this.handleLayerError);\n  }\n\n  handleWindowResize = () => {\n    if (isMobile()) {\n      this.map.invalidateSize();\n    }\n  };\n\n  handleInfoWindowClose = () => {\n    this.map.closePopup();\n    if (isMobile()) {\n      this.map.invalidateSize();\n    }\n  };\n\n  handleAddLayerError = (error) => {\n    console.error(error);\n    this.toggleLoadingIndicator(false); //hide loading indicator\n  };\n\n  handleAddLayer = ({ key, layerConfig, data }) => {\n    const self = this;\n    let layerGroup;\n\n    switch (layerConfig.type) {\n      case \"point\":\n        layerGroup = handlePointLayer();\n        break;\n\n      case \"polygon\":\n        layerGroup = handlePolygonLayer();\n        break;\n\n      case \"marker-cluster\":\n        layerGroup = handleMarkerCluster();\n        break;\n\n      default:\n        throw Error(\"Unrecognized map layer type\");\n    }\n\n    function handlePointLayer() {\n      return L.geoJson(data, {\n        pointToLayer: layerConfig.pointToLayer,\n        onEachFeature: layerConfig.onEachFeature,\n      });\n    }\n\n    function handlePolygonLayer() {\n      return L.geoJson(data, {\n        style(feature) {\n          return layerConfig.style(feature);\n        },\n        onEachFeature: layerConfig.onEachFeature,\n      });\n    }\n\n    function handleMarkerCluster() {\n      const markerLayer = L.geoJson(data, {\n        pointToLayer: layerConfig.pointToLayer,\n      });\n\n      const markerClusterGroup = L.markerClusterGroup({\n        maxClusterRadius: 40,\n      }).on(\"clusterclick\", function () {\n        if (isMobile()) {\n          dispatch.call(\"title-details-close\");\n        }\n      });\n\n      markerClusterGroup.addLayer(markerLayer).bindPopup(function (layer) {\n        dispatch.call(\"render-infowindow\", null, {\n          template: \"rentstrikes\",\n          data: layer.feature.properties,\n        });\n\n        return Mustache.render(\n          self.rentStrikePopupTemplate,\n          layerConfig.props(layer)\n        );\n      });\n\n      return markerClusterGroup;\n    }\n\n    if (layerConfig.type !== \"marker-cluster\") {\n      layerGroup.bindPopup(function (layer) {\n        const props = layerConfig.props(layer);\n        dispatch.call(\"render-infowindow\", null, {\n          template: \"protections\",\n          data: props,\n        });\n        return Mustache.render(self.popupTemplate, props);\n      });\n    }\n\n    this.dataLayers.set(layerConfig.name, {\n      layerGroup,\n      zIndex: layerConfig.zIndex,\n    });\n\n    if (this.config[key]) {\n      layerGroup.addTo(this.map);\n    }\n\n    this.fixZOrder();\n    this.handleAllLayersAdded();\n  };\n\n  handleAllLayersAdded = () => {\n    // if all layers have been added to this.dataLayers add the layers toggle UI\n    if (this.dataLayers.size !== TOTAL_NUMBER_OF_MAP_LAYERS) {\n      return;\n    }\n\n    this.dataLayers.forEach(({ layerGroup }, name) => {\n      this.layersControl.addOverlay(layerGroup, name);\n    });\n\n    //hide the loading indicator\n    this.toggleLoadingIndicator(false);\n  };\n\n  fixZOrder = () => {\n    const layers = Array.from(this.dataLayers.values()).sort(\n      (a, b) => b.zIndex - a.zIndex\n    );\n    layers.forEach(({ layerGroup }) => {\n      if (this.map.hasLayer(layerGroup)) {\n        layerGroup.bringToFront();\n      }\n    });\n  };\n\n  toggleLoadingIndicator = (isLoading) => {\n    if (isLoading) {\n      dispatch.call(\"show-loading-indicator\");\n    } else {\n      dispatch.call(\"hide-loading-indicator\");\n    }\n  };\n}\n","import Mustache from \"mustache\";\nimport { dispatch } from \"utils/dispatch\";\n\nexport class InfoWindow {\n  infowindowContainer = document.getElementById(\"aemp-infowindow-container\");\n\n  infowindowTemplate = document.getElementById(\"aemp-infowindow-template\")\n    .innerHTML;\n\n  rentStrikeInfowindowTemplate = document.getElementById(\n    \"aemp-rentstrike-infowindow-template\"\n  ).innerHTML;\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners() {\n    dispatch.on(\"render-infowindow\", this.render);\n    dispatch.on(\"close-infowindow.self\", this.closeInfoWindow);\n  }\n\n  closeInfoWindow = () => {\n    document.getElementById(\"root\").classList.remove(\"aemp-popupopen\");\n    this.infowindowContainer.innerHTML = null;\n  };\n\n  render = (props) => {\n    const { template, data } = props;\n    switch (template) {\n      case \"protections\":\n        this.infowindowContainer.innerHTML = Mustache.render(\n          this.infowindowTemplate,\n          data\n        );\n        break;\n      case \"rentstrikes\":\n        this.infowindowContainer.innerHTML = Mustache.render(\n          this.rentStrikeInfowindowTemplate,\n          data\n        );\n        break;\n      default:\n        break;\n    }\n    this.infowindowContainer\n      .querySelector(\".aemp-infowindow-close\")\n      .addEventListener(\"click\", () => dispatch.call(\"close-infowindow\"));\n    document.getElementById(\"root\").classList.add(\"aemp-popupopen\");\n  };\n}\n","import { dispatch } from \"utils/dispatch\";\n\nexport class LoadingIndicator {\n  loadingContainer = document.getElementById(\"loading-container\");\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners() {\n    dispatch.on(\"show-loading-indicator\", this.show);\n    dispatch.on(\"hide-loading-indicator\", this.hide);\n  }\n\n  show = () => {\n    // the default for the corresponding DOM element is false\n    this.loadingContainer.hidden = false;\n  };\n\n  hide = () => {\n    this.loadingContainer.hidden = true;\n  };\n}\n","// fetch polyfill for IE\nimport \"whatwg-fetch\";\nimport { aempCartoAccount } from \"./config\";\nimport { mapLayersConfig } from \"../map-layers\";\nimport { dispatch } from \"./dispatch\";\n\nconst cartoSqlApiBaseUri = `https://${aempCartoAccount}.carto.com/api/v2/sql`;\n\nfunction handleFetchSuccess(name, data) {\n  dispatch.call(name, null, data);\n}\n\nfunction handleFetchFailure(name, error) {\n  dispatch.call(name, null, error);\n}\n\nexport async function getCartoData(query, format = \"geojson\") {\n  const res = await fetch(\n    `${cartoSqlApiBaseUri}?q=${window.encodeURIComponent(\n      query\n    )}&format=${format}`\n  );\n\n  if (!res || !res.ok) {\n    throw Error(\"Unable to fetch Carto data\");\n  }\n\n  return res.json();\n}\n\nexport async function getData() {\n  Object.entries(mapLayersConfig).forEach(async ([key, layerConfig]) => {\n    try {\n      const data = await getCartoData(layerConfig.query);\n      handleFetchSuccess(\"fetch-map-data-resolve\", { key, layerConfig, data });\n    } catch (error) {\n      handleFetchFailure(\"fetch-map-data-reject\", error);\n      dispatch.call(\"hide-loading-indicator\");\n    }\n  });\n}\n","import \"styles/index.scss\";\nimport { LeafletMap } from \"./components/LeafletMap\";\nimport { InfoWindow } from \"./components/InfoWindow\";\nimport { TitleDetails } from \"./components/TitleDetails\";\nimport { LoadingIndicator } from \"./components/LoadingIndicator\";\nimport { getData } from \"utils/data\";\nimport { parseUriHash } from \"utils/parse-hash\";\nimport { defaultMapConfig } from \"utils/constants\";\nimport { dispatch } from \"./utils/dispatch\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  dispatch.on(\"fetch-map-data-resolve.debug\", console.log);\n  dispatch.on(\"fetch-map-data-reject.debug\", console.error);\n}\n\nconst mapConfig = parseUriHash(defaultMapConfig);\n\nnew LeafletMap(mapConfig);\nnew InfoWindow();\nnew TitleDetails();\nnew LoadingIndicator();\n\ngetData();\n","/**\n * parseUriHash\n * Check the url hash for params then override map default settings if any are present.\n * assumes params are as follows:\n * #lat=<float>&lng=<float>&z=<integer>&states=<boolean>&cities=<boolean>&counties=<boolean>&rentstrike=<boolean>\n * @param {*} mapConfig\n */\nexport function parseUriHash(mapConfig) {\n  let input = window.location.hash.slice(1).split(\"&\");\n  let inputVals = {};\n  let i = 0;\n\n  for (i; i < input.length; i++) {\n    let [key, value] = input[i].split(\"=\");\n    inputVals[key] = value;\n  }\n\n  if (!isNaN(inputVals.z)) {\n    mapConfig.z = parseInt(inputVals.z);\n  }\n\n  if (!isNaN(inputVals.lat)) {\n    mapConfig.lat = parseFloat(inputVals.lat);\n  }\n\n  if (!isNaN(inputVals.lng)) {\n    mapConfig.lng = parseFloat(inputVals.lng);\n  }\n\n  if (inputVals.cities !== undefined) {\n    if (inputVals.cities === \"true\") {\n      mapConfig.cities = true;\n    } else if (inputVals.cities === \"false\") {\n      mapConfig.cities = false;\n    }\n  }\n\n  if (inputVals.counties !== undefined) {\n    if (inputVals.counties === \"true\") {\n      mapConfig.counties = true;\n    } else if (inputVals.counties === \"false\") {\n      mapConfig.counties = false;\n    }\n  }\n\n  if (inputVals.states !== undefined) {\n    if (inputVals.states === \"true\") {\n      mapConfig.states = true;\n    } else if (inputVals.states === \"false\") {\n      mapConfig.states = false;\n    }\n  }\n\n  if (inputVals.nations !== undefined) {\n    if (inputVals.nations === \"true\") {\n      mapConfig.nations = true;\n    } else if (inputVals.nations === \"false\") {\n      mapConfig.nations = false;\n    }\n  }\n\n  if (inputVals.rentstrike !== undefined) {\n    if (inputVals.rentstrike === \"true\") {\n      mapConfig.rentStrikes = true;\n    } else if (inputVals.rentstrike === \"false\") {\n      mapConfig.rentStrikes = false;\n    }\n  }\n}\n","import { dispatch } from \"utils/dispatch\";\n\n/**\n * TitleDetails: // the collapsable <details> element in the <header>\n */\nexport class TitleDetails {\n  titleDetails = document\n    .getElementById(\"aemp-titlebox\")\n    .querySelector(\"details\");\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners = () => {\n    this.titleDetails.addEventListener(\"toggle\", function () {\n      if (this.open) {\n        document.getElementById(\"aemp-titlebox\").classList.remove(\"collapsed\");\n      } else {\n        document.getElementById(\"aemp-titlebox\").classList.add(\"collapsed\");\n      }\n    });\n\n    dispatch.on(\"title-details-toggle\", this.toggleTitleDetails);\n    dispatch.on(\"title-details-open\", this.openTitleDetails);\n    dispatch.on(\"title-details-close\", this.closeTitleDetails);\n  };\n\n  closeTitleDetails = () => {\n    this.titleDetails.open = false;\n  };\n\n  openTitleDetails = () => {\n    this.titleDetails.open = true;\n  };\n\n  toggleTitleDetails = () => {\n    if (this.titleDetails.open) {\n      this.titleDetails.open = false;\n    } else {\n      this.titleDetails.open = true;\n    }\n  };\n}\n"],"sourceRoot":""}