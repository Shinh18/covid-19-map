{"version":3,"sources":["webpack:///./src/lib/leaflet.js","webpack:///./src/utils/dispatch.js","webpack:///./src/utils/config.js","webpack:///./src/utils/queries.js","webpack:///./src/utils/datetime.js","webpack:///./src/map-layers.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/data.js","webpack:///./src/components/LeafletMap.js","webpack:///./src/utils/i18n.js","webpack:///./src/components/InfoWindow.js","webpack:///./src/components/TitleDetails.js","webpack:///./src/components/LoadingIndicator.js","webpack:///./src/components/Modal.js","webpack:///./src/components/SearchBar.js","webpack:///./src/index.js","webpack:///./src/utils/parse-hash.js"],"names":["L","Object","assign","require","rentStrikeIcon","Icon","iconUrl","iconSize","iconAnchor","className","dispatch","d3Dispatch","cartoSheetSyncTable","bingApiKey","citiesCartoQuery","countiesCartoQuery","statesCartoQuery","countriesCartoQuery","housingActionsCartoQuery","searchResultProtectionsQuery","adminLevel","locationName","formatDate","date","locale","timeZone","Date","toLocaleString","year","month","day","highlightFeature","e","layer","target","type","setStyle","fillOpacity","mapLayersConfig","cities","name","nameI18n","query","queries","zIndex","overlayOrder","props","feature","properties","municipality","state","country","end_date_legist","end_date_rent_relief","end_date_court","end_date_earliest","rest","jurisdictionName","jurisdictionType","jurisdictionTypeI18n","popupName","endDateLegist","endDateRentRelief","endDateCourt","endDateEarliest","style","color","strokeColorScale","range","colorNoData","fillColor","fillColorScale","radius","pointRadius","weight","strokeWeightLess","pointToLayer","latlng","circleMarker","onEachFeature","has_expired_protections","options","policyStrengthLayerClassNames","on","mouseover","mouseout","counties","county","states","admin","strokeWeightMore","nations","name_en","rentStrikes","marker","icon","window","undefined","defaultMapConfig","lat","lng","z","TOTAL_NUMBER_OF_MAP_LAYERS","keys","length","isMobile","document","querySelector","offsetWidth","usStateAbbrevToName","al","ak","az","ar","ca","co","ct","de","fl","ga","hi","id","il","in","ia","ks","ky","la","me","md","ma","mi","mn","ms","mo","mt","ne","nv","nh","nj","nm","ny","nc","nd","oh","ok","or","pa","ri","sc","sd","tn","tx","ut","vt","va","wa","wv","wi","wy","dc","indiaStateAbbrevToName","an","ap","as","br","ch","dn","dd","dl","gj","hr","hp","jk","jh","ka","kl","ld","mp","mh","ml","mz","nl","py","pb","rj","sk","tg","tr","up","wb","cartoSqlApiBaseUri","handleFetchSuccess","data","call","handleFetchFailure","error","getCartoData","a","format","fetch","encodeURIComponent","res","Error","json","entries","forEach","key","layerConfig","getSearchData","str","langStr","navigator","language","this","getAutocompleteMapLocation","val","LeafletMap","config","Map","innerHTML","map","invalidateSize","closePopup","console","toggleLoadingIndicator","layerGroup","markerLayer","markerClusterGroup","self","geoJson","maxClusterRadius","polygonOptions","zoomToBoundsOnClick","addLayer","bindPopup","template","Mustache","render","rentStrikePopupTemplate","popupTemplate","localizedName","i18next","t","dataLayers","set","addTo","fixZOrder","handleAllLayersAdded","size","fixOverlayOrder","layersControl","addOverlay","Array","from","values","sort","b","hasLayer","bringToFront","isLoading","value","trim","location","resource","resourceSets","resources","center","point","coordinates","markerIcon","Default","setView","markerContent","openPopup","showSearchResultProtections","getSearchResultProtections","protections","address","countryRegion","stateName","adminDistrict","toLowerCase","reduce","prevPromise","mapObj","queryForProtectionByLocation","protection","plainLanguageAdminLevel","locality","adminDistrict2","features","concat","Promise","resolve","indexOf","replace","log","init","bindListeners","zoomControl","attributionControl","maxBounds","maxZoom","control","attribution","prefix","addAttribution","zoom","position","layers","collapsed","basemapLayer","tileLayer","minZoom","resizeWindow","getElementById","classList","add","popup","_latlng","getZoom","animate","remove","setTimeout","addEventListener","clearTimeout","handleWindowResize","handleInfoWindowClose","handleAddLayer","handleLayerError","findAutocompleteLocation","translateContent","element","querySelectorAll","el","dataset","i18n","i18nOptions","whitelist","fallbackLng","debug","process","detection","order","lookupQuerystring","checkForSimilarInWhitelist","i18nInit","then","translations","default","use","LanguageDetector","InfoWindow","infowindowContainer","infowindowTemplate","rentStrikeInfowindowTemplate","dataItem","searchResultInfowindowTemplate","join","closeInfoWindow","TitleDetails","titleDetails","open","toggleTitleDetails","openTitleDetails","closeTitleDetails","LoadingIndicator","loadingContainer","hidden","show","hide","Modal","modalContainer","closeButton","SearchBar","searchBar","autoCompleteElement","defaultValue","removeNoData","contains","autoComplete","removeAutocomplete","getElementsByClassName","stopPropagation","err","autoselectSuggestions","noDataFound","preventDefault","filter","__type","autocompleteElement","formattedAddress","mapConfig","input","hash","slice","split","inputVals","i","isNaN","parseInt","parseFloat","rentstrike","parseUriHash","getData"],"mappings":"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","file":"index.8a9ab8fb95cac717fb73.js","sourcesContent":["// NOTE: use this module for referencing Leaflet,\n// so that any Leaflet plugins are also available\nconst L = Object.assign(\n  {},\n  require(\"leaflet\"),\n  require(\"leaflet.markercluster\")\n);\n\nexport const rentStrikeIcon = new L.Icon({\n  iconUrl: \"./assets/mapIcons/rent-strike.svg\",\n  iconSize: [40, 40],\n  iconAnchor: [20, 20],\n  className: \"icon-rent-strike\",\n});\n\nexport default L;\n","import { dispatch as d3Dispatch } from \"d3-dispatch\";\n// d3-dispatch is a lightweight pub/sub module\n// for more see: https://github.com/d3/d3-dispatch\n\n// using dispatch.on() or dispatch.call() with one of the\n// following strings will respond or invoke an event\nconst events = [\n  \"fetch-map-data-resolve\",\n  \"fetch-map-data-reject\",\n  \"viewport-size\",\n  \"render-infowindow\",\n  \"close-infowindow\",\n  \"title-details-toggle\",\n  \"title-details-close\",\n  \"title-details-open\",\n  \"show-modal\",\n  \"hide-modal\",\n  \"show-loading-indicator\",\n  \"hide-loading-indicator\",\n  \"choose-autocomplete-element\",\n  \"remove-autocompete-dropdown\",\n  \"search-fetch-data-reject\",\n  \"search-bar-no-data\",\n];\n\n/**\n * dispatch usage:\n * dispatch.call(\"<event-name>\", <optional this context>, <optional value>);\n * dispatch.on(\"<event-name>\", <callback function>)\n * dispatch.on(\"<event-name.sub-name>\", <second callback function>)\n * dispatch.on(\"<event-name.sub-other-name>\", <third callback function>)\n * etc...\n */\nexport const dispatch = d3Dispatch(...events);\n","// name of AEMP's CARTO account\nexport const aempCartoAccount = \"ampitup\";\n\n// table in CARTO that syncs with the tenants protections legislation Google sheet\nexport const cartoSheetSyncTable = \"public.emergency_tenant_protections_scored\";\n\n// table in CARTO that syncs with the housing actions Google sheet\nexport const cartoHousingActionsTable = \"public.emergency_housing_actions\";\n\n// misc admin boundary geometry tables\nexport const cartoCountiesTable = \"public.us_county_boundaries\";\nexport const cartoStatesTable = \"public.states_and_provinces_global\";\nexport const cartoNationsTable = \"public.countries\";\n\nexport const bingApiKey =\n  \"Al2-1GXrd8GzwtSAID3J3LJn-flLLgNWzNtsT5nnSKW8dA2ClgaXXXMQR6WfE6wE\";\n","import {\n  cartoHousingActionsTable,\n  cartoSheetSyncTable,\n  cartoCountiesTable,\n  cartoStatesTable,\n  cartoNationsTable,\n} from \"./config\";\n\n/**\n * SQL queries that are passed to the CARTO SQL API\n * for more info on the SQL API see: https://carto.com/developers/sql-api/\n */\n\nexport const citiesCartoQuery = `\nSELECT\n  municipality, state, country, range, has_expired_protections,\n  policy_type, policy_summary, link, the_geom,\n  end_date_earliest, end_date_legist, end_date_rent_relief, end_date_court\nFROM ${cartoSheetSyncTable}\nWHERE the_geom is not null and admin_scale = 'City'\nORDER BY range`;\n\nexport const countiesCartoQuery = `\nSELECT\n  c.the_geom, c.county, c.state, m.range,\n  m.policy_type, m.policy_summary, m.link,\n  m.range, has_expired_protections,\n  end_date_earliest, end_date_legist, end_date_rent_relief, end_date_court\nFROM ${cartoCountiesTable} c\nJOIN ${cartoSheetSyncTable} m\nON ST_Intersects(c.the_geom, m.the_geom)\nWHERE m.the_geom IS NOT NULL\n  AND m.admin_scale = 'County'\n  OR m.admin_scale = 'City and County'\nORDER BY m.range`;\n\nexport const statesCartoQuery = `\nSELECT\n  s.the_geom, s.name, s.admin, s.sr_adm0_a3,\n  m.range, m.iso, m .policy_type, m.policy_summary,\n  m.link, has_expired_protections,\n  end_date_earliest, end_date_legist, end_date_rent_relief, end_date_court\nFROM ${cartoStatesTable} s\nINNER JOIN ${cartoSheetSyncTable} m\n  ON s.name = m.state\n  AND s.sr_adm0_a3 = m.iso\n  AND m.admin_scale = 'State'\nORDER BY m.range`;\n\nexport const countriesCartoQuery = `\nSELECT\n  c.the_geom, c.adm0_a3, c.name_en, m.range,\n  m.policy_type, m.policy_summary, m.link, has_expired_protections,\n  end_date_earliest\nFROM ${cartoNationsTable} c\nINNER JOIN ${cartoSheetSyncTable} m\n  ON c.adm0_a3 = m.iso\n  AND m.admin_scale = 'Country'\nORDER BY m.range`;\n\nexport const housingActionsCartoQuery = `\n  SELECT\n    CASE\n      WHEN strike_status IN ('Yes / Sí / 是 / Oui', 'Yes') THEN 'Yes'\n      WHEN strike_status IN ('Unsure / No estoy segurx / 不确定 / Pas sûr.e.s.', 'No') THEN 'No'\n      ELSE 'Unsure'\n    END AS status,\n    CASE\n      WHEN type LIKE 'Rent Strike%' THEN 'Rent Strike / Rent decrease'\n      WHEN type LIKE 'Occupation / Squat%' THEN 'Occupation / Squat'\n      WHEN type LIKE 'Mutual aid / Direct aid%' THEN 'Mutual aid / Direct aid'\n      WHEN type LIKE 'Campaigning / List of demands%' THEN 'Campaigning / List of demands'\n      ELSE 'Other'\n    END AS strike_type,\n    TO_CHAR(date :: DATE, 'Month d, yyyy') as start,\n    the_geom, location, why, resources\n  FROM ${cartoHousingActionsTable}\n  WHERE the_geom IS NOT NULL;\n`;\n\n//Rent Strike / Rent decrease (i.e. suspended or decreased rent payment) / Huelga de alquiler / disminución de alquiler (es decir, pago de alquiler suspendido o disminuido) / Grève du loyer / diminution du loyer (c.-à-d. Suspension ou diminution du paiement du loyer) / 租金罢工/租金减少（即暂停或减少的租金支付）\n\nexport const searchResultProtectionsQuery = (adminLevel, locationName) => {\n  switch (adminLevel) {\n    case \"locality\":\n      return `SELECT municipality AS jurisdictionname, municipality, has_expired_protections, range, policy_type, policy_summary, link, end_date_earliest, end_date_legist, end_date_rent_relief, end_date_court, the_geom_webmercator AS the_geom FROM ${cartoSheetSyncTable} WHERE admin_scale = 'City' AND municipality LIKE '${locationName}%'`;\n    case \"adminDistrict2\":\n      return `SELECT  c.county AS jurisdictionname, m.range, m.policy_type, m.policy_summary, m.link, m.range, m.has_expired_protections, m.end_date_earliest, m.end_date_legist, m.end_date_rent_relief, m.end_date_court, c.the_geom_webmercator AS the_geom FROM ${cartoCountiesTable} c INNER JOIN ${cartoSheetSyncTable} m ON ST_Intersects(c.the_geom, m.the_geom) WHERE m.admin_scale = 'County' AND c.county LIKE '${locationName}%' AND m.admin_scale = 'County'`;\n    case \"adminDistrict\":\n      return `SELECT state AS jurisdictionname, range, policy_type, policy_summary, link, has_expired_protections, end_date_earliest, end_date_legist, end_date_rent_relief, end_date_court, the_geom_webmercator AS the_geom  FROM ${cartoSheetSyncTable} WHERE admin_scale ='State' AND state LIKE '${locationName}%'`;\n    case \"countryRegion\":\n      return `SELECT country AS jurisdictionname, range, policy_type, policy_summary, link, has_expired_protections, end_date_earliest, the_geom_webmercator AS the_geom FROM ${cartoSheetSyncTable} WHERE admin_scale = 'Country' AND policy_type = 'National' AND country LIKE '${locationName}%'`;\n  }\n};\n","export const formatDate = (date, locale, timeZone) =>\n  date\n    ? new Date(date).toLocaleString(locale || \"en-US\", {\n        timeZone: timeZone || \"UTC\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      })\n    : null;\n","import L, { rentStrikeIcon } from \"lib/leaflet\";\nimport {\n  colorNoData,\n  fillColorScale,\n  strokeColorScale,\n  strokeWeightLess,\n  strokeWeightMore,\n  pointRadius,\n  fillOpacity,\n  policyStrengthLayerClassNames,\n} from \"utils/constants\";\nimport * as queries from \"./utils/queries\";\nimport { formatDate } from \"./utils/datetime\";\n\n//styling helpers\n\nfunction highlightFeature(e) {\n  const layer = e.target;\n\n  if (e.type === \"mouseover\") {\n    layer.setStyle({\n      fillOpacity: 0.4,\n    });\n  } else if (e.type === \"mouseout\") {\n    layer.setStyle({\n      fillOpacity: fillOpacity,\n    });\n  } else {\n    return;\n  }\n}\n\nexport const mapLayersConfig = {\n  cities: {\n    name: \"City Protections\",\n    nameI18n: \"layer-select.cities\",\n    type: \"point\",\n    query: queries.citiesCartoQuery,\n    zIndex: 1,\n    overlayOrder: 0,\n    props(layer) {\n      const {\n        municipality,\n        state,\n        country,\n        end_date_legist,\n        end_date_rent_relief,\n        end_date_court,\n        end_date_earliest,\n        ...rest\n      } = layer.feature.properties;\n      return {\n        // Build city name with state and country if supplied\n        jurisdictionName: `${municipality}${state ? `, ${state}` : \"\"}${\n          country ? `, ${country}` : \"\"\n        }`,\n        jurisdictionType: \"City\",\n        jurisdictionTypeI18n: \"city\",\n        popupName: municipality,\n        endDateLegist: formatDate(end_date_legist),\n        endDateRentRelief: formatDate(end_date_rent_relief),\n        endDateCourt: formatDate(end_date_court),\n        endDateEarliest: formatDate(end_date_earliest),\n        ...rest,\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: 0.85,\n        radius: pointRadius,\n        weight: strokeWeightLess,\n      };\n    },\n    pointToLayer(feature, latlng) {\n      return L.circleMarker(latlng, mapLayersConfig.cities.style(feature));\n    },\n    onEachFeature(feature, layer) {\n      // class name is used for applying pattern fills to polygons\n      if (feature.properties.has_expired_protections) {\n        layer.options.className =\n          policyStrengthLayerClassNames[feature.properties.range] +\n          \"--city-level\";\n      }\n      layer.on({\n        mouseover: (e) => highlightFeature(e),\n        mouseout: (e) => highlightFeature(e),\n      });\n    },\n  },\n  counties: {\n    name: \"County Protections\",\n    nameI18n: \"layer-select.counties\",\n    type: \"polygon\",\n    query: queries.countiesCartoQuery,\n    zIndex: 2,\n    overlayOrder: 1,\n    props(layer) {\n      const {\n        state,\n        county,\n        end_date_legist,\n        end_date_rent_relief,\n        end_date_court,\n        end_date_earliest,\n        ...rest\n      } = layer.feature.properties;\n      return {\n        // Show county with state if state field is set\n        jurisdictionName: `${county}${state ? `, ${state}` : \"\"}`,\n        jurisdictionType: \"County\",\n        jurisdictionTypeI18n: \"county\",\n        popupName: `${county}${state ? `, ${state}` : \"\"}`,\n        endDateLegist: formatDate(end_date_legist),\n        endDateRentRelief: formatDate(end_date_rent_relief),\n        endDateCourt: formatDate(end_date_court),\n        endDateEarliest: formatDate(end_date_earliest),\n        ...rest,\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        weight: strokeWeightLess,\n      };\n    },\n    onEachFeature(feature, layer) {\n      // class name is used for applying pattern fills to polygons\n      if (feature.properties.has_expired_protections) {\n        layer.options.className =\n          policyStrengthLayerClassNames[feature.properties.range];\n      }\n      layer.on({\n        mouseover: (e) => highlightFeature(e),\n        mouseout: (e) => highlightFeature(e),\n      });\n    },\n  },\n  states: {\n    name: \"State/Province Protections\",\n    nameI18n: \"layer-select.states\",\n    type: \"polygon\",\n    query: queries.statesCartoQuery,\n    zIndex: 3,\n    overlayOrder: 2,\n    props(layer) {\n      const {\n        name,\n        admin,\n        end_date_legist,\n        end_date_rent_relief,\n        end_date_court,\n        end_date_earliest,\n        ...rest\n      } = layer.feature.properties;\n      return {\n        jurisdictionName: `${name}${admin ? `, ${admin}` : \"\"}`,\n        jurisdictionType: \"State/Province\",\n        jurisdictionTypeI18n: \"state-province\",\n        popupName: name,\n        endDateLegist: formatDate(end_date_legist),\n        endDateRentRelief: formatDate(end_date_rent_relief),\n        endDateCourt: formatDate(end_date_court),\n        endDateEarliest: formatDate(end_date_earliest),\n        ...rest,\n      };\n    },\n    style(feature) {\n      return {\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        weight: strokeWeightMore,\n      };\n    },\n    onEachFeature(feature, layer) {\n      // class name is used for applying pattern fills to polygons\n      if (feature.properties.has_expired_protections) {\n        layer.options.className =\n          policyStrengthLayerClassNames[feature.properties.range];\n      }\n      layer.on({\n        mouseover: (e) => highlightFeature(e),\n        mouseout: (e) => highlightFeature(e),\n      });\n    },\n  },\n  nations: {\n    name: \"National Protections\",\n    nameI18n: \"layer-select.nations\",\n    type: \"polygon\",\n    query: queries.countriesCartoQuery,\n    zIndex: 4,\n    overlayOrder: 3,\n    props(layer) {\n      const { name_en, end_date_earliest, ...rest } = layer.feature.properties;\n      return {\n        endDateEarliest: formatDate(end_date_earliest),\n        jurisdictionName: name_en,\n        jurisdictionType: \"Country\",\n        jurisdictionTypeI18n: \"nation\",\n        popupName: name_en,\n        ...rest,\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        weight: strokeWeightLess,\n      };\n    },\n    onEachFeature(feature, layer) {\n      // class name is used for applying pattern fills to polygons\n      if (feature.properties.has_expired_protections) {\n        layer.options.className =\n          policyStrengthLayerClassNames[feature.properties.range];\n      }\n      layer.on({\n        mouseover: (e) => highlightFeature(e),\n        mouseout: (e) => highlightFeature(e),\n      });\n    },\n  },\n  rentStrikes: {\n    name: \"Housing Justice Actions\",\n    nameI18n: \"layer-select.housingJusticeAction\",\n    type: \"marker-cluster\",\n    query: queries.housingActionsCartoQuery,\n    zIndex: 0, // markers have their very own layer pane in Leaflet so don't need a z-index value\n    overlayOrder: 4,\n    props(layer) {\n      return layer.feature.properties;\n    },\n    pointToLayer(feature, latlng) {\n      return L.marker(latlng, {\n        icon: rentStrikeIcon,\n      });\n    },\n  },\n};\n\nwindow.mapLayersConfig = mapLayersConfig;\n","import { mapLayersConfig } from \"../map-layers\";\n\n// List of all languages we have translations for.\nexport const languages = [\"en\", \"es\", \"pt-BR\"];\n\n// color values come from this ColorBrewer:\nexport const colorNoData = \"#939393\";\nexport const fillColorScale = [undefined, \"#5e5e5e\", \"#bdbdbd\", \"#ffffff\"];\nexport const strokeColorScale = [undefined, \"#ffffff\", \"#ffffff\", \"#ffffff\"];\n\nexport const rentStrikeColor = \"#c92a1d\";\n\n// global map layer styling variables\nexport const strokeWeightMore = 3; //state boundary\nexport const strokeWeightLess = 1.5;\nexport const pointRadius = 10;\nexport const fillOpacity = 0.95;\n\n// corresponds to fill & stroke color scales above\nexport const policyStrengthLayerClassNames = [\n  undefined,\n  \"few-protections\",\n  \"some-protections\",\n  \"many-protections\",\n];\n\n// note: this matches the breakpoint in styles.css\nexport const MOBILE_BREAKPOINT = 640;\nexport const DESKTOP_BREAKPOINT = 1200;\n\nexport const defaultMapConfig = {\n  lat: 40.27,\n  lng: -43.74,\n  z: 2,\n  nations: true,\n  states: true,\n  cities: true,\n  counties: true,\n  rentStrikes: true,\n};\n\nexport const TOTAL_NUMBER_OF_MAP_LAYERS = Object.keys(mapLayersConfig).length;\n\nexport const isMobile = () =>\n  document.querySelector(\"body\").offsetWidth < MOBILE_BREAKPOINT;\n\nexport const usStateAbbrevToName = {\n  al: \"Alabama\",\n  ak: \"Alaska\",\n  az: \"Arizona\",\n  ar: \"Arkansas\",\n  ca: \"California\",\n  co: \"Colorado\",\n  ct: \"Connecticut\",\n  de: \"Delaware\",\n  fl: \"Florida\",\n  ga: \"Georgia\",\n  hi: \"Hawaii\",\n  id: \"Idaho\",\n  il: \"Illinois\",\n  in: \"Indiana\",\n  ia: \"Iowa\",\n  ks: \"Kansas\",\n  ky: \"Kentucky\",\n  la: \"Louisiana\",\n  me: \"Maine\",\n  md: \"Maryland\",\n  ma: \"Massachusetts\",\n  mi: \"Michigan\",\n  mn: \"Minnesota\",\n  ms: \"Mississippi\",\n  mo: \"Missouri\",\n  mt: \"Montana\",\n  ne: \"Nebraska\",\n  nv: \"Nevada\",\n  nh: \"New Hampshire\",\n  nj: \"New Jersey\",\n  nm: \"New Mexico\",\n  ny: \"New York\",\n  nc: \"North Carolina\",\n  nd: \"North Dakota\",\n  oh: \"Ohio\",\n  ok: \"Oklahoma\",\n  or: \"Oregon\",\n  pa: \"Pennsylvania\",\n  ri: \"Rhode Island\",\n  sc: \"South Carolina\",\n  sd: \"South Dakota\",\n  tn: \"Tennessee\",\n  tx: \"Texas\",\n  ut: \"Utah\",\n  vt: \"Vermont\",\n  va: \"Virginia\",\n  wa: \"Washington\",\n  wv: \"West Virginia\",\n  wi: \"Wisconson\",\n  wy: \"Wyoming\",\n  dc: \"District of Columbia\",\n};\n\nexport const indiaStateAbbrevToName = {\n  an: \"Andaman and Nicobar Islands\",\n  ap: \"Andhra Pradesh\",\n  ar: \"Arunachal Pradesh\",\n  as: \"Assam\",\n  br: \"Bihar\",\n  ch: \"Chandigarh\",\n  ct: \"Chhattisgarh\",\n  dn: \"Dadra and Nagar Haveli\",\n  dd: \"Daman and Diu\",\n  dl: \"Delhi\",\n  ga: \"Goa\",\n  gj: \"Gujarat\",\n  hr: \"Haryana\",\n  hp: \"Himachal Pradesh\",\n  jk: \"Jammu and Kashmir\",\n  jh: \"Jharkhand\",\n  ka: \"Karnataka\",\n  kl: \"Kerala\",\n  ld: \"Lakshadweep\",\n  mp: \"Madhya Pradesh\",\n  mh: \"Maharashtra\",\n  mn: \"Manipur\",\n  ml: \"Meghalaya\",\n  mz: \"Mizoram\",\n  nl: \"Nagaland\",\n  or: \"Odisha\",\n  py: \"Puducherry\",\n  pb: \"Punjab\",\n  rj: \"Rajasthan\",\n  sk: \"Sikkim\",\n  tn: \"Tamil Nadu\",\n  tg: \"Telangana\",\n  tr: \"Tripura\",\n  up: \"Uttar Pradesh\",\n  ut: \"Uttarakhand\",\n  wb: \"West Bengal\",\n};\n","// fetch polyfill for IE\nimport \"whatwg-fetch\";\nimport { aempCartoAccount, bingApiKey } from \"./config\";\nimport { mapLayersConfig } from \"../map-layers\";\nimport { dispatch } from \"./dispatch\";\n\nconst cartoSqlApiBaseUri = `https://${aempCartoAccount}.carto.com/api/v2/sql`;\n\nfunction handleFetchSuccess(name, data) {\n  dispatch.call(name, null, data);\n}\n\nfunction handleFetchFailure(name, error) {\n  dispatch.call(name, null, error);\n}\n\nexport async function getCartoData(query, format = \"geojson\") {\n  const res = await fetch(\n    `${cartoSqlApiBaseUri}?q=${window.encodeURIComponent(\n      query\n    )}&format=${format}`\n  );\n\n  if (!res || !res.ok) {\n    throw Error(\"Unable to fetch Carto data\");\n  }\n\n  return res.json();\n}\n\nexport async function getData() {\n  Object.entries(mapLayersConfig).forEach(async ([key, layerConfig]) => {\n    try {\n      const data = await getCartoData(layerConfig.query);\n      handleFetchSuccess(\"fetch-map-data-resolve\", { key, layerConfig, data });\n    } catch (error) {\n      handleFetchFailure(\"fetch-map-data-reject\", error);\n      dispatch.call(\"hide-loading-indicator\");\n    }\n  });\n}\nexport async function getSearchData(str) {\n  let langStr = navigator.language ? `&culture = ${navigator.language}` : \"\";\n  try {\n    let res = await fetch(\n      `https://dev.virtualearth.net/REST/v1/Autosuggest?query=${str}${langStr}&includeEntityTypes=place&userMapView=-90,-180,90,180&key=${bingApiKey}`\n    );\n    return await res.json();\n  } catch (e) {\n    dispatch.call(\"search-fetch-data-reject\", this, e);\n  }\n}\n\nexport async function getAutocompleteMapLocation(val) {\n  try {\n    let res = await fetch(\n      `https://dev.virtualearth.net/REST/v1/Locations/${val}?&key=${bingApiKey}`\n    );\n    return res.json();\n  } catch (e) {\n    dispatch.call(\"search-fetch-data-reject\", this, e);\n  }\n}\n","import Mustache from \"mustache\";\nimport i18next from \"i18next\";\nimport L from \"lib/leaflet\";\nimport { dispatch } from \"utils/dispatch\";\nimport {\n  defaultMapConfig,\n  isMobile,\n  rentStrikeColor,\n  TOTAL_NUMBER_OF_MAP_LAYERS,\n} from \"utils/constants\";\nimport { getAutocompleteMapLocation } from \"utils/data\";\nimport { getCartoData } from \"../utils/data\";\nimport * as queries from \"../utils/queries\";\nimport {\n  usStateAbbrevToName,\n  indiaStateAbbrevToName,\n} from \"../utils/constants\";\nimport { mapLayersConfig } from \"../map-layers\";\n\nexport class LeafletMap {\n  // dataLayers: look up table to store layer groups in the form of\n  // { layerGroup: <Leaflet layer group>, zIndex: <integer> }\n  dataLayers = new Map();\n\n  // Mustache templates for popup HTML\n  popupTemplate = document.querySelector(\".popup-template\").innerHTML;\n  rentStrikePopupTemplate = document.querySelector(\".rentstrike-popup-template\")\n    .innerHTML;\n\n  constructor(config) {\n    this.config = config || defaultMapConfig;\n    this.init();\n    this.bindListeners();\n  }\n\n  init() {\n    const { lat, lng, z } = this.config;\n\n    this.map = L.map(\"map\", {\n      zoomControl: false,\n      attributionControl: false,\n      maxBounds: [\n        [-85.05, -190], // lower left\n        [85.05, 200], // upper right\n      ],\n      maxZoom: 12,\n    });\n\n    this.map.setView([lat, lng], z);\n    this.attributionControl = L.control\n      .attribution({ prefix: \"Data sources by: \" })\n      .addAttribution(\n        \"<a href='https://www.antievictionmap.com/' target='_blank'>Anti-Eviction Mapping Project</a>\"\n      )\n      .addAttribution(\n        \"<a href='https://www.openstreetmap.org' target='_blank'>Open Street Map Contributors</a>\"\n      )\n      .addTo(this.map);\n\n    this.zoomControl = L.control\n      .zoom({ position: \"bottomright\" })\n      .addTo(this.map);\n\n    this.layersControl = L.control\n      .layers(null, null, {\n        position: \"topright\",\n        collapsed: false,\n      })\n      .addTo(this.map);\n\n    this.basemapLayer = L.tileLayer(\n      \"https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png\",\n      {\n        minZoom: 1,\n        maxZoom: 18,\n      }\n    ).addTo(this.map);\n  }\n\n  bindListeners() {\n    const self = this;\n    this.map.on(\"popupopen\", function (e) {\n      document.getElementById(\"root\").classList.add(\"aemp-popupopen\");\n\n      if (isMobile()) {\n        dispatch.call(\"title-details-close\");\n        self.map.invalidateSize();\n      }\n      self.map.setView(e.popup._latlng, self.map.getZoom(), { animate: true });\n    });\n\n    this.map.on(\"popupclose\", function () {\n      document.getElementById(\"root\").classList.remove(\"aemp-popupopen\");\n      dispatch.call(\"close-infowindow\");\n      if (isMobile())\n        setTimeout(function () {\n          self.map.invalidateSize();\n        }, 100);\n    });\n\n    this.map.on(\"click\", function () {\n      if (isMobile()) {\n        dispatch.call(\"title-details-close\");\n      }\n    });\n\n    // Apply correct relative order of layers when adding from control.\n    this.map.on(\"overlayadd\", () => {\n      this.fixZOrder();\n    });\n\n    let resizeWindow;\n    window.addEventListener(\"resize\", function () {\n      clearTimeout(resizeWindow);\n      resizeWindow = setTimeout(self.handleWindowResize, 250);\n    });\n\n    // Close the title box if mobile\n    window.addEventListener(\"load\", function () {\n      if (isMobile()) {\n        dispatch.call(\"title-details-close\");\n      }\n    });\n\n    dispatch.on(\"close-infowindow.map\", this.handleInfoWindowClose);\n    dispatch.on(\"fetch-map-data-resolve.map\", this.handleAddLayer);\n    dispatch.on(\"fetch-map-data-reject.map\", this.handleLayerError);\n    dispatch.on(\n      \"choose-autocomplete-element.map\",\n      this.findAutocompleteLocation\n    );\n  }\n\n  handleWindowResize = () => {\n    if (isMobile()) {\n      this.map.invalidateSize();\n    }\n  };\n\n  handleInfoWindowClose = () => {\n    this.map.closePopup();\n    if (isMobile()) {\n      this.map.invalidateSize();\n    }\n  };\n\n  handleAddLayerError = (error) => {\n    console.error(error);\n    this.toggleLoadingIndicator(false); //hide loading indicator\n  };\n\n  handleAddLayer = ({ key, layerConfig, data }) => {\n    const self = this;\n    let layerGroup;\n\n    switch (layerConfig.type) {\n      case \"point\":\n        layerGroup = handlePointLayer();\n        break;\n\n      case \"polygon\":\n        layerGroup = handlePolygonLayer();\n        break;\n\n      case \"marker-cluster\":\n        layerGroup = handleMarkerCluster();\n        break;\n\n      default:\n        throw Error(\"Unrecognized map layer type\");\n    }\n\n    function handlePointLayer() {\n      return L.geoJson(data, {\n        pointToLayer: layerConfig.pointToLayer,\n        onEachFeature: layerConfig.onEachFeature,\n      });\n    }\n\n    function handlePolygonLayer() {\n      return L.geoJson(data, {\n        style(feature) {\n          return layerConfig.style(feature);\n        },\n        onEachFeature: layerConfig.onEachFeature,\n      });\n    }\n\n    function handleMarkerCluster() {\n      const markerLayer = L.geoJson(data, {\n        pointToLayer: layerConfig.pointToLayer,\n      });\n\n      const markerClusterGroup = L.markerClusterGroup({\n        maxClusterRadius: 40,\n        polygonOptions: { color: rentStrikeColor, zoomToBoundsOnClick: false },\n      }).on(\"clusterclick\", function () {\n        if (isMobile()) {\n          dispatch.call(\"title-details-close\");\n        }\n      });\n\n      markerClusterGroup.addLayer(markerLayer).bindPopup(function (layer) {\n        dispatch.call(\"render-infowindow\", null, {\n          template: \"rentstrikes\",\n          data: layer.feature.properties,\n        });\n\n        return Mustache.render(\n          self.rentStrikePopupTemplate,\n          layerConfig.props(layer)\n        );\n      });\n\n      return markerClusterGroup;\n    }\n\n    if (layerConfig.type !== \"marker-cluster\") {\n      layerGroup.bindPopup(function (layer) {\n        const props = layerConfig.props(layer);\n        dispatch.call(\"render-infowindow\", null, {\n          template: \"protections\",\n          data: props,\n        });\n        return Mustache.render(self.popupTemplate, props);\n      });\n    }\n\n    // Create layer group with localised name\n    const localizedName = i18next.t(layerConfig.nameI18n) || layerConfig.name;\n    this.dataLayers.set(localizedName, {\n      layerGroup,\n      zIndex: layerConfig.zIndex,\n      overlayOrder: layerConfig.overlayOrder,\n    });\n\n    if (this.config[key]) {\n      layerGroup.addTo(this.map);\n    }\n\n    this.fixZOrder();\n    this.handleAllLayersAdded();\n  };\n\n  handleAllLayersAdded = () => {\n    // if all layers have been added to this.dataLayers add the layers toggle UI\n    if (this.dataLayers.size !== TOTAL_NUMBER_OF_MAP_LAYERS) {\n      return;\n    }\n\n    // fix the order of layers in the layer controller\n    this.fixOverlayOrder(this.dataLayers).forEach(({ layerGroup }, name) => {\n      this.layersControl.addOverlay(layerGroup, name);\n    });\n\n    //hide the loading indicator\n    this.toggleLoadingIndicator(false);\n  };\n\n  // fix the z order of the map layers\n  fixZOrder = () => {\n    const layers = Array.from(this.dataLayers.values()).sort(\n      (a, b) => b.zIndex - a.zIndex\n    );\n\n    layers.forEach(({ layerGroup }) => {\n      if (this.map.hasLayer(layerGroup)) {\n        layerGroup.bringToFront();\n      }\n    });\n  };\n\n  // return a new Map with the correct overlay order\n  fixOverlayOrder = (dataLayers) => {\n    const layers = new Map(\n      [...dataLayers.entries()].sort(\n        (a, b) => a[1].overlayOrder - b[1].overlayOrder\n      )\n    );\n\n    return layers;\n  };\n\n  toggleLoadingIndicator = (isLoading) => {\n    if (isLoading) {\n      dispatch.call(\"show-loading-indicator\");\n    } else {\n      dispatch.call(\"hide-loading-indicator\");\n    }\n  };\n\n  findAutocompleteLocation = async (value) => {\n    try {\n      let location = await getAutocompleteMapLocation(value.trim());\n      let resource = location.resourceSets[0].resources[0];\n      let center = resource.point.coordinates;\n      const markerIcon = L.icon({ iconUrl: L.Icon.Default });\n      this.map.setView(center, 5);\n      const marker = new L.marker(center, { icon: markerIcon });\n      marker.addTo(this.map);\n      let markerContent = `\n          <div class=\"popup-container locality-popup-container\">\n              <p class=\"popup-title\"><strong>${resource.name}</strong></p>\n          </div>\n      `;\n      marker.bindPopup(markerContent).openPopup();\n      this.showSearchResultProtections(resource);\n    } catch (e) {\n      dispatch.call(\"search-bar-no-data\", this, e);\n    }\n  };\n\n  showSearchResultProtections = async (resource) => {\n    let protections = await this.getSearchResultProtections(resource);\n    dispatch.call(\"render-infowindow\", null, {\n      template: \"searchResult\",\n      data: protections,\n    });\n  };\n\n  getSearchResultProtections = async (resource) => {\n    //this is necessary because Bing sometimes returns full state names and other times as two-letter abbreviations\n    if (resource.address.countryRegion === \"United States\") {\n      let stateName = resource.address.adminDistrict;\n      if (\n        stateName.length === 2 &&\n        usStateAbbrevToName[stateName.toLowerCase()]\n      ) {\n        Object.assign(resource.address, {\n          adminDistrict: usStateAbbrevToName[stateName.toLowerCase()],\n        });\n      }\n    }\n    //India too\n    if (resource.address.countryRegion === \"India\") {\n      let stateName = resource.address.adminDistrict;\n      if (\n        stateName.length === 2 &&\n        indiaStateAbbrevToName[stateName.toLowerCase()]\n      ) {\n        Object.assign(resource.address, {\n          adminDistrict: indiaStateAbbrevToName[stateName.toLowerCase()],\n        });\n      }\n    }\n    return [\n      \"locality\",\n      \"adminDistrict2\",\n      \"adminDistrict\",\n      \"countryRegion\",\n    ].reduce(async (prevPromise, adminLevel) => {\n      let mapObj = await prevPromise;\n      if (!resource.address[adminLevel]) {\n        return mapObj;\n      }\n      const protection = await this.queryForProtectionByLocation(\n        adminLevel,\n        resource.address[adminLevel]\n      );\n      let plainLanguageAdminLevel = {\n        locality: \"cities\",\n        adminDistrict2: \"counties\",\n        adminDistrict: \"states\",\n        countryRegion: \"nations\",\n      }[adminLevel];\n      if (protection && protection.features.length) {\n        return mapObj.concat(\n          mapLayersConfig[plainLanguageAdminLevel].props(\n            Object.assign({}, { feature: protection.features[0] })\n          )\n        );\n      }\n      return mapObj;\n    }, Promise.resolve([]));\n  };\n  queryForProtectionByLocation = async (adminLevel, locationName) => {\n    if (\n      adminLevel === \"adminDistrict2\" &&\n      locationName.indexOf(\"County\") >= 0\n    ) {\n      locationName = locationName.replace(\" County\", \"\");\n    }\n    try {\n      return await getCartoData(\n        queries.searchResultProtectionsQuery(adminLevel, locationName)\n      );\n    } catch (e) {\n      console.log(\n        `no protections data from ${adminLevel} named ${locationName}`\n      );\n      return null;\n    }\n  };\n}\n","import i18next from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport { languages } from \"./constants\";\n\nexport const I18N_ATTRIBUTE = \"data-i18n\";\n\nexport const translateContent = (element) => {\n  const selectedDomTree = element || document;\n  const elements = selectedDomTree.querySelectorAll(`[${I18N_ATTRIBUTE}]`);\n  elements.forEach((el) => {\n    const key = el.dataset.i18n;\n    const t = i18next.t(key);\n    // If translation found set element content as translation.\n    if (t !== key) el.innerHTML = t;\n    // Otherwise use english as fallback\n    else el.innerHTML = i18next.t(key, { lng: \"en\" });\n  });\n};\n\n// Default values for i18next config\nconst i18nOptions = {\n  whitelist: languages,\n  fallbackLng: \"en\",\n  debug: process.env.NODE_ENV !== \"production\",\n  detection: {\n    order: [\"querystring\", \"navigator\"],\n    lookupQuerystring: \"lang\",\n    checkForSimilarInWhitelist: true,\n  },\n};\n\n// Initialize i18n next\nexport const i18nInit = async () => {\n  // this code splits the locales JSON imports so that they're not included with the index bundle\n  await import(/* webpackChunkName: \"locales\" */ \"../locale\").then(\n    ({ default: translations }) => {\n      i18nOptions.resources = translations;\n      i18next\n        .use(LanguageDetector)\n        .init(i18nOptions)\n        .then(() => {\n          // First pass of translation\n          translateContent();\n        });\n    }\n  );\n};\n","import Mustache from \"mustache\";\nimport { dispatch } from \"utils/dispatch\";\nimport { translateContent } from \"utils/i18n\";\n\nexport class InfoWindow {\n  infowindowContainer = document.getElementById(\"aemp-infowindow-container\");\n\n  infowindowTemplate = document.getElementById(\"aemp-infowindow-template\")\n    .innerHTML;\n\n  rentStrikeInfowindowTemplate = document.getElementById(\n    \"aemp-rentstrike-infowindow-template\"\n  ).innerHTML;\n\n  searchResultInfowindowTemplate = document.getElementById(\n    \"search-result-infowindow-template\"\n  ).innerHTML;\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners() {\n    dispatch.on(\"render-infowindow\", this.render);\n    dispatch.on(\"close-infowindow.self\", this.closeInfoWindow);\n  }\n\n  closeInfoWindow = () => {\n    document.getElementById(\"root\").classList.remove(\"aemp-popupopen\");\n    this.infowindowContainer.innerHTML = null;\n  };\n\n  render = (props) => {\n    const { template, data } = props;\n\n    switch (template) {\n      case \"protections\":\n        this.infowindowContainer.innerHTML = Mustache.render(\n          this.infowindowTemplate,\n          data\n        );\n        break;\n      case \"rentstrikes\":\n        this.infowindowContainer.innerHTML = Mustache.render(\n          this.rentStrikeInfowindowTemplate,\n          data\n        );\n        break;\n      case \"searchResult\":\n        this.infowindowContainer.innerHTML = data.length\n          ? `\n        <div class=\"aemp-infowindow\">\n          <a class=\"aemp-infowindow-close\" href=\"#close\">×</a>\n          <div>\n            <p class=\"infowindow-title\">\n              <strong data-i18n=\"infowindow.policy.title\"></strong>\n            </p>\n          </div>\n\n          ` +\n            data\n              .map((dataItem) =>\n                Mustache.render(this.searchResultInfowindowTemplate, dataItem)\n              )\n              .join(\"\") +\n            \"</div>\"\n          : `\n        <div>\n          <p class=\"infowindow-title\">\n            <strong data-i18n=\"infowindow.policy.title\"></strong>\n          </p>\n        </div>\n        <div class=\"aemp-infowindow\">\n          <a class=\"aemp-infowindow-close\" href=\"#close\">×</a>\n          <div><p><strong data-i18n=\"searchbar.not-found\">No tenant protections listed for this location</strong></p></div>\n          </div>`;\n        break;\n\n      default:\n        break;\n    }\n\n    // Translate the page after showing the info window\n    translateContent(this.infowindowContainer);\n\n    this.infowindowContainer\n      .querySelector(\".aemp-infowindow-close\")\n      .addEventListener(\"click\", () => dispatch.call(\"close-infowindow\"));\n    document.getElementById(\"root\").classList.add(\"aemp-popupopen\");\n  };\n}\n","import { dispatch } from \"utils/dispatch\";\n\n/**\n * TitleDetails: // the collapsable <details> element in the <header>\n */\nexport class TitleDetails {\n  titleDetails = document\n    .getElementById(\"aemp-titlebox\")\n    .querySelector(\"details\");\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners = () => {\n    this.titleDetails.addEventListener(\"toggle\", function () {\n      if (this.open) {\n        document\n          .getElementById(\"aemp-titlebox\")\n          .classList.remove(\"collapsed\", \"aemp-titlebox-closed\");\n      } else {\n        document\n          .getElementById(\"aemp-titlebox\")\n          .classList.add(\"collapsed\", \"aemp-titlebox-closed\");\n      }\n    });\n\n    dispatch.on(\"title-details-toggle\", this.toggleTitleDetails);\n    dispatch.on(\"title-details-open\", this.openTitleDetails);\n    dispatch.on(\"title-details-close\", this.closeTitleDetails);\n  };\n\n  closeTitleDetails = () => {\n    this.titleDetails.open = false;\n  };\n\n  openTitleDetails = () => {\n    this.titleDetails.open = true;\n  };\n\n  toggleTitleDetails = () => {\n    if (this.titleDetails.open) {\n      this.titleDetails.open = false;\n    } else {\n      this.titleDetails.open = true;\n    }\n  };\n}\n","import { dispatch } from \"utils/dispatch\";\n\nexport class LoadingIndicator {\n  loadingContainer = document.getElementById(\"loading-container\");\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners() {\n    dispatch.on(\"show-loading-indicator\", this.show);\n    dispatch.on(\"hide-loading-indicator\", this.hide);\n  }\n\n  show = () => {\n    // the default for the corresponding DOM element is false\n    this.loadingContainer.hidden = false;\n  };\n\n  hide = () => {\n    this.loadingContainer.hidden = true;\n  };\n}\n","import { dispatch } from \"utils/dispatch\";\n\nexport class Modal {\n  modalContainer = document.getElementById(\"modal-container\");\n  closeButton = document.querySelector(\".modal-close\");\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners() {\n    dispatch.on(\"show-modal\", this.show);\n    dispatch.on(\"hide-modal\", this.hide);\n\n    this.closeButton.addEventListener(\"click\", () => {\n      dispatch.call(\"hide-modal\");\n    });\n  }\n\n  show = () => {\n    // the default for the corresponding DOM element is false\n    this.modalContainer.hidden = false;\n  };\n\n  hide = () => {\n    this.modalContainer.hidden = true;\n  };\n}\n","import { getSearchData } from \"utils/data\";\nimport { dispatch } from \"utils/dispatch\";\nimport i18next from \"i18next\";\n\nexport class SearchBar {\n  searchBar = document.getElementById(\"search-bar\");\n  autoCompleteElement = document.getElementById(\"search-bar-autocomplete\");\n  icon = this.searchBar.value;\n  defaultValue = this.icon + i18next.t(\"searchbar.default-value\");\n\n  constructor() {\n    this.searchBar.value = this.defaultValue;\n    this.searchBar.addEventListener(\"input\", () =>\n      this.autoComplete(this.searchBar.value)\n    );\n    this.searchBar.addEventListener(\"blur\", this.removeAutocomplete);\n    this.searchBar.addEventListener(\"focus\", () => {\n      this.searchBar.value = \"\";\n    });\n    this.searchBar.addEventListener(\"change\", (e) => {\n      if (\n        [...document.getElementsByClassName(\"autocompleteElement\")]\n          .map((a) => a.value)\n          .indexOf(this.searchBar.value) >= 0\n      ) {\n        let val = this.searchBar.value;\n\n        dispatch.call(\"choose-autocomplete-element\", null, val);\n      }\n      e.stopPropagation();\n    });\n    dispatch.on(\"search-fetch-data-reject\", (err) => console.error(err));\n\n    document\n      .getElementById(\"search-bar-form\")\n      .addEventListener(\"submit\", (e) => {\n        let autoselectSuggestions = [\n          ...document.getElementsByClassName(\"autocompleteElement\"),\n        ].map((a) => a.value);\n        if (autoselectSuggestions.length > 0) {\n          dispatch.call(\n            \"choose-autocomplete-element\",\n\n            null,\n            autoselectSuggestions[0]\n          );\n        } else {\n          this.noDataFound();\n        }\n        e.stopPropagation();\n        e.preventDefault();\n      });\n  }\n\n  noDataFound() {\n    document.getElementById(\"search-bar\").classList.add(\"search-bar-no-data\");\n  }\n\n  removeAutocomplete = () => {\n    setTimeout(() => {\n      this.autoCompleteElement.innerHTML = \"\";\n      this.searchBar.value = this.defaultValue;\n      this.removeNoData();\n    }, 400);\n  };\n\n  async autoComplete(str) {\n    this.removeNoData();\n    if (str.length > 1) {\n      try {\n        const res = await getSearchData(str.trim());\n        if (res && res.resourceSets && res.resourceSets[0].resources) {\n          const values = res.resourceSets[0].resources[0].value.filter(\n            (value) => value.__type === \"Place\"\n          );\n          this.autoCompleteElement.innerHTML = values\n            .map((value) =>\n              this.autocompleteElement(value.address.formattedAddress)\n            )\n            .join(\"\");\n        }\n      } catch (e) {\n        dispatch.call(\"search-fetch-data-reject\", this, e);\n      }\n    }\n  }\n\n  removeNoData = () => {\n    if (this.searchBar.classList.contains(\"search-bar-no-data\")) {\n      this.searchBar.classList.remove(\"search-bar-no-data\");\n    }\n  };\n\n  autocompleteElement(location) {\n    return `\n        <option value=\"${location}\" class = \"autocompleteElement\">\n    `;\n  }\n}\n","import \"styles/index.scss\";\nimport { LeafletMap } from \"./components/LeafletMap\";\nimport { InfoWindow } from \"./components/InfoWindow\";\nimport { TitleDetails } from \"./components/TitleDetails\";\nimport { LoadingIndicator } from \"./components/LoadingIndicator\";\nimport { Modal } from \"./components/Modal\";\nimport { SearchBar } from \"./components/SearchBar\";\nimport { getData } from \"utils/data\";\nimport { parseUriHash } from \"utils/parse-hash\";\nimport { defaultMapConfig } from \"utils/constants\";\nimport { dispatch } from \"./utils/dispatch\";\nimport { i18nInit } from \"./utils/i18n\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  dispatch.on(\"fetch-map-data-resolve.debug\", console.log);\n  dispatch.on(\"fetch-map-data-reject.debug\", console.error);\n}\n\nconst mapConfig = parseUriHash(defaultMapConfig);\n\ni18nInit().then(() => {\n  new Modal();\n  new LoadingIndicator();\n  new InfoWindow();\n  new TitleDetails();\n  new SearchBar();\n  new LeafletMap(mapConfig);\n  getData();\n});\n","/**\n * parseUriHash\n * Check the url hash for params then override map default settings if any are present.\n * assumes params are as follows:\n * #lat=<float>&lng=<float>&z=<integer>&states=<boolean>&cities=<boolean>&counties=<boolean>&rentstrike=<boolean>\n * @param {*} mapConfig\n */\nexport function parseUriHash(mapConfig) {\n  let input = window.location.hash.slice(1).split(\"&\");\n  let inputVals = {};\n  let i = 0;\n\n  for (i; i < input.length; i++) {\n    let [key, value] = input[i].split(\"=\");\n    inputVals[key] = value;\n  }\n\n  if (!isNaN(inputVals.z)) {\n    mapConfig.z = parseInt(inputVals.z);\n  }\n\n  if (!isNaN(inputVals.lat)) {\n    mapConfig.lat = parseFloat(inputVals.lat);\n  }\n\n  if (!isNaN(inputVals.lng)) {\n    mapConfig.lng = parseFloat(inputVals.lng);\n  }\n\n  if (inputVals.cities !== undefined) {\n    if (inputVals.cities === \"true\") {\n      mapConfig.cities = true;\n    } else if (inputVals.cities === \"false\") {\n      mapConfig.cities = false;\n    }\n  }\n\n  if (inputVals.counties !== undefined) {\n    if (inputVals.counties === \"true\") {\n      mapConfig.counties = true;\n    } else if (inputVals.counties === \"false\") {\n      mapConfig.counties = false;\n    }\n  }\n\n  if (inputVals.states !== undefined) {\n    if (inputVals.states === \"true\") {\n      mapConfig.states = true;\n    } else if (inputVals.states === \"false\") {\n      mapConfig.states = false;\n    }\n  }\n\n  if (inputVals.nations !== undefined) {\n    if (inputVals.nations === \"true\") {\n      mapConfig.nations = true;\n    } else if (inputVals.nations === \"false\") {\n      mapConfig.nations = false;\n    }\n  }\n\n  if (inputVals.rentstrike !== undefined) {\n    if (inputVals.rentstrike === \"true\") {\n      mapConfig.rentStrikes = true;\n    } else if (inputVals.rentstrike === \"false\") {\n      mapConfig.rentStrikes = false;\n    }\n  }\n}\n"],"sourceRoot":""}